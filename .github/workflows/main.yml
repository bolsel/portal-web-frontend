name: Build & push images

on:
  push:
    branches:
      - "main"

jobs:
  build-app:
    runs-on: ubuntu-latest
    outputs: 
      matrix: ${{ steps.build.outputs.value }}
    steps:
      - uses: actions/checkout@master
        with:
          repository: upiksaleh/portal-web-frontend
          path: .

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          repository: bolsel/portal-web-frontend
          path: ./apps/bolsel
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'yarn'
      
      - name: Install project dependencies
        run: yarn install --frozen-lockfile

      - name: Build portal-main
        run: yarn nx run bolsel-portal-main:build:self
      - name: Build websites
        run: yarn nx run bolsel-websites:build:self
        env:
          NEXT_PUBLIC_API_RESOURCE_BASE_URL: https://bolselkab.go.id/api/resources/

      - name: build
        id: build
        run: |
          cd apps/bolsel
          content=`node build.js`
          echo "value=$content" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        id: restore-build
        with:
          path: ./apps/bolsel/dist
          key: ${{ runner.os }}-dist


  build-image:
    runs-on: ubuntu-latest
    needs: [build-app]
    strategy:
      fail-fast: false
      matrix: ${{ needs.build-app.outputs.matrix }}

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/cache@v3
        id: restore-build
        with:
          path: ./apps/bolsel/dist
          key: ${{ runner.os }}-dist

      - run: mv ./apps/bolsel/dist/* .
      - run: rm -rf ./apps 

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
    
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache-${{ matrix.id }}
          key: ${{ runner.os }}-buildx-${{ matrix.id }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.id }}-
  
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ matrix.image }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
    
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.context }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache-${{ matrix.id }}
          cache-to: type=local,dest=/tmp/.buildx-cache-${{ matrix.id }}-new

      - name: Move Docker cache
        run: |
          rm -rf /tmp/.buildx-cache-${{ matrix.id }}
          mv /tmp/.buildx-cache-${{ matrix.id }}-new /tmp/.buildx-cache-${{ matrix.id }}