name: main

on:
  push:
    paths:
      - "portal-main/**"
      - "websites/**"
      - "_libs/**"
      - ".github/workflows/main.yml"
      - "Dockerfile"
      - "prebuild.js"


jobs:
  build_push_image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          repository: upiksaleh/portal-web-frontend
          path: .

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          path: ./apps/bolsel
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: get version (portal-main)
        id: portal-main-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1
        with:
          path: ./apps/bolsel/portal-main

      - name: get version (portal-main)
        id: websites-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1
        with:
          path: ./apps/bolsel/websites

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'yarn'
      
      - name: Install project dependencies
        run: yarn install --frozen-lockfile
      - name: Build portal-main
        run: yarn nx run bolsel-portal-main:build:self
      - name: Build websites
        run: yarn nx run bolsel-websites:build:self
        env:
          NEXT_PUBLIC_API_RESOURCE_BASE_URL: https://bolselkab.go.id/api/resources/
      - name: prebuild
        run: cd apps/bolsel && node prebuild.js
      
      - name: package.json hash
        id: packagejsonhash
        run: |
          content=`cat ./apps/bolsel/dist/package.json.sha256`
          echo "::set-output name=packagejsonhash::$content"
      - run: |
          echo "${{steps.packagejsonhash.outputs.packagejsonhash}}"

      - name: Extract metadata for Docker image (base)
        id: meta-base
        uses: docker/metadata-action@v4
        with:
          images: |
            bolsel/portal-web-base
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
          labels: |
            packagejsonhash=${{steps.packagejsonhash.outputs.packagejsonhash}}
      
      - name: Extract metadata for Docker image (portal-main)
        id: meta-portal-main
        uses: docker/metadata-action@v4
        with:
          images: |
            bolsel/portal-web-main-app
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=raw,value=${{ steps.portal-main-version.outputs.current-version}}

      - name: Extract metadata for Docker image (websites)
        id: meta-websites
        uses: docker/metadata-action@v4
        with:
          images: |
            bolsel/portal-web-websites-app
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=raw,value=${{ steps.websites-version.outputs.current-version}}

      - name: Build and push (base)
        uses: docker/build-push-action@v4
        with:
          context: ./apps/bolsel
          file: ./apps/bolsel/Dockerfile
          tags: ${{ steps.meta-base.outputs.tags }}
          labels: ${{ steps.meta-base.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
        if: steps.meta-base.outputs.labels.packagejsonhash != steps.packagejsonhash.outputs.packagejsonhash

      - name: Build and push (portal-main)
        uses: docker/build-push-action@v4
        with:
          context: ./apps/bolsel/dist/portal-main
          file: ./apps/bolsel/dist/portal-main/Dockerfile
          tags: ${{ steps.meta-portal-main.outputs.tags }}
          labels: ${{ steps.meta-portal-main.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Build and push (websites)
        uses: docker/build-push-action@v4
        with:
          context: ./apps/bolsel/dist/websites
          file: ./apps/bolsel/dist/websites/Dockerfile
          tags: ${{ steps.meta-websites.outputs.tags }}
          labels: ${{ steps.meta-websites.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      # Temp fix:
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache